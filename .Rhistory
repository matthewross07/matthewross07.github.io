rmarkdown::render_site()
rmarkdown::render_site()
install.packages("LAGOSNE")
rmarkdown::render_site()
rmarkdown::render_site()
library(tidyverse)
library(tidyverse)
groups <- 1:10000
df <- tibble(groups=rep(groups,each=100)) %>%
mutate(random_value=runif(n=nrow(.),min=0,max=100000))
system.time({
df %>%
group_by(groups) %>%
mutate(max=max(random_value)) %>%
filter(random_value == max)
})
system.time({
df %>%
group_by(groups) %>%
#mutate(max=max(random_value)) %>%
filter(random_value == max(random_value))
})
system.time({
df %>%
group_by(groups) %>%
mutate(max_value=max(random_value)) %>%
filter(random_value == max)
})
system.time({
df %>%
group_by(groups) %>%
mutate(max_value=max(random_value)) %>%
filter(random_value == max_value)
})
groups <- 1:20000
df <- tibble(groups=rep(groups,each=100)) %>%
mutate(random_value=runif(n=nrow(.),min=0,max=100000))
system.time({
df %>%
group_by(groups) %>%
mutate(max_value=max(random_value)) %>%
filter(random_value == max_value)
})
system.time({
df %>%
group_by(groups) %>%
mutate(max_value=max(random_value)) %>%
ungroup() %>%
filter(random_value == max_value)
})
knit_with_parameters('~/Dropbox/Personal Website/GithubWebsite/Ross-CSU-CV.Rmd')
rmarkdown::render()
rmarkdown::render('Ross-CSU-CV.Rmd')
rmarkdown::render('Ross-CSU-CV.Rmd')
?render
rmarkdown::render('Ross-CSU-CV.Rmd',output_format='pdf')
list.files()
library(plot3D)
library(animation)
library(tidyverse)
#Assuming a bulk density of 3000 kg/m3
bd <- 2500 #kg/m3
lb.tds <- 8939 + 450 #CO2 + tds #kg/ha
lb.area <- 68 #ha
rb.area <- 118 #ha
rb.tds <- 203 #kg/ha
lb.void.rate.per.km <- lb.tds/bd*100
rb.void.rate.per.km <- rb.tds/bd*100
lb.tibble <- tibble(rate=lb.void.rate.per.km,
years=1:50) %>%
mutate(cume.rate =cumsum(rate)) %>%
mutate(x0=cume.rate^(1/3)/2*-1,
y0=x0,
z0=y0,
x1=cume.rate^(1/3)/2,
y1=x1,
z1=x1)
lims <- c(min(lb.tibble$x0),max(lb.tibble$x1))
rb.tibble <- tibble(rate=rb.void.rate.per.km,
years=1:50) %>%
mutate(cume.rate =cumsum(rate)) %>%
mutate(x0=cume.rate^(1/3)/2*-1,
y0=x0,
z0=y0,
x1=cume.rate^(1/3)/2,
y1=x1,
z1=x1)
lims <- c(min(lb.tibble$x0),max(lb.tibble$x1))
col='blue4'
box.plotter <- function(df,col,title){
with(df,
box3D(x0,y0,z0,
x1,y1,z1,
col=col,alpha=0.5,border='black',
theta=20,phi=20,xlab='',
xlim=lims,ylim=lims,zlim=lims,
axes=F,box=F))
mtext(paste(title,'Year =',i,'Void space = ',
round(df$cume.rate,0),'m3'),
side=3,line=-1)
}
saveGIF(
for(i in 1:nrow(lb.tibble)){
par(mar=c(0,0,0,0),mgp=c(1.8,0.5,0),cex=1.5,cex.lab=1.5,cex.axis=1.3)
mx1 <- matrix(c(1,2),1,2,byrow=T)
layout(mx1)
lb <- lb.tibble[i,]
rb <- rb.tibble[i,]
box.plotter(lb,'red4','LB')
box.plotter(rb,'blue4','RB')
},
movie.name='mining.gif',interval=.1,ani.width=800,ani.height=400
)
library(plot3D)
library(animation)
library(tidyverse)
#Assuming a bulk density of 3000 kg/m3
bd <- 2500 #kg/m3
lb.tds <- 8939 + 450 #CO2 + tds #kg/ha
lb.area <- 68 #ha
rb.area <- 118 #ha
rb.tds <- 203 #kg/ha
lb.void.rate.per.km <- lb.tds/bd*100
rb.void.rate.per.km <- rb.tds/bd*100
lb.tibble
lb.tibble <- tibble(rate=lb.void.rate.per.km,
years=1:50) %>%
rbind(tibble(rate=0,
years=rep(0,30))) %>%
arrange(years) %>%
mutate(cume.rate =cumsum(rate)) %>%
mutate(x0=25,
y0=50,
z0=cume.rate/(x0*y0),
x1=0,
y1=0,
z1=0)
lims <- c(min(lb.tibble$x0),max(lb.tibble$x1))
rb.tibble <- tibble(rate=rb.void.rate.per.km,
years=1:50) %>%
rbind(tibble(rate=0,
years=rep(0,30))) %>%
arrange(years)%>%
mutate(cume.rate =cumsum(rate)) %>%
mutate(x0=25,
y0=50,
z0=cume.rate/(x0*y0),
x1=0,
y1=0,
z1=0)
xlims <- c(0,25)
ylims <- c(0,50)
zlims <- c(0,max(lb.tibble$z0))
col='blue4'
box.plotter <- function(df,col,title){
with(df,
box3D(x0,y0,z0,
x1,y1,z1,
col=col,alpha=0.6,border='black',
theta=20,phi=20,xlab='',
xlim=xlims,ylim=ylims,zlim=zlims,
axes=F,box=F))
box3D(0,0,0,25,50,2,border='white',theta=20,phi=20,xlab='',
xlim=xlims,ylim=ylims,zlim=zlims,axes=F,box=F,
col='blue3',alpha=.2,add=T)
mtext(paste(title,'Year =',df$years,'Void space = ',
round(df$cume.rate,0),'m3'),
cex=2,
side=3,line=-1.5)
if(title=='Unmined'){
mtext('This movie shows the amount of void space created by chemical
weathering in mined (red) and unmined catchments (green)
in each square kilometer of the catchment. The light blue outline is the size
of an olympic swimming pool at 50 x 25 x 2 meters (2,500 cubic meters).
After 50 years,the unmined catchment has barely started to weather
out 1/5th the volume of a swimming pool, while the mined catchment has
created a void space equivalent to almost 10 olympic size swimming pools',
side=3,line=-16,cex=1.7)
}
}
saveGIF(
for(i in 1:nrow(lb.tibble)){
par(mar=c(0,0,1,0),mgp=c(1.8,0.5,0),cex=1.5,cex.lab=1.5,cex.axis=1.3)
mx1 <- matrix(c(1,2),1,2,byrow=T)
layout(mx1)
lb <- lb.tibble[i,]
rb <- rb.tibble[i,]
box.plotter(rb,'green2','Unmined')
box.plotter(lb,'red3','Mined')
},
movie.name='mining_swimming_pools.gif',interval=.1,ani.width=1500,ani.height=750,loop=2
)
library(plot3D)
library(animation)
library(tidyverse)
#Assuming a bulk density of 3000 kg/m3
bd <- 2500 #kg/m3
lb.tds <- 8939 + 450 #CO2 + tds #kg/ha
lb.area <- 68 #ha
rb.area <- 118 #ha
rb.tds <- 203 #kg/ha
lb.void.rate.per.km <- lb.tds/bd*100
rb.void.rate.per.km <- rb.tds/bd*100
lb.tibble
lb.tibble <- tibble(rate=lb.void.rate.per.km,
years=1:50) %>%
rbind(tibble(rate=0,
years=rep(0,30))) %>%
arrange(years) %>%
mutate(cume.rate =cumsum(rate)) %>%
mutate(x0=25,
y0=50,
z0=cume.rate/(x0*y0),
x1=0,
y1=0,
z1=0)
lims <- c(min(lb.tibble$x0),max(lb.tibble$x1))
rb.tibble <- tibble(rate=rb.void.rate.per.km,
years=1:50) %>%
rbind(tibble(rate=0,
years=rep(0,30))) %>%
arrange(years)%>%
mutate(cume.rate =cumsum(rate)) %>%
mutate(x0=25,
y0=50,
z0=cume.rate/(x0*y0),
x1=0,
y1=0,
z1=0)
xlims <- c(0,25)
ylims <- c(0,50)
zlims <- c(0,max(lb.tibble$z0))
col='blue4'
box.plotter <- function(df,col,title){
with(df,
box3D(x0,y0,z0,
x1,y1,z1,
col=col,alpha=0.6,border='black',
theta=20,phi=20,xlab='',
xlim=xlims,ylim=ylims,zlim=zlims,
axes=F,box=F))
box3D(0,0,0,25,50,2,border='white',theta=20,phi=20,xlab='',
xlim=xlims,ylim=ylims,zlim=zlims,axes=F,box=F,
col='blue3',alpha=.2,add=T)
mtext(paste(title,'Year =',df$years,'Void space = ',
round(df$cume.rate,0),'m3'),
cex=2,font=2,
side=3,line=-1.5)
if(title=='Unmined'){
mtext('This movie shows the amount of void space created by chemical
weathering in mined (red) and unmined catchments (green)
in each square kilometer of the catchment. The light blue outline is the size
of an olympic swimming pool at 50 x 25 x 2 meters (2,500 cubic meters).
After 50 years,the unmined catchment has barely started to weather
out 1/5th the volume of a swimming pool, while the mined catchment has
created a void space equivalent to almost 10 olympic size swimming pools',
side=3,line=-16,cex=1.8)
}
}
saveGIF(
for(i in 1:nrow(lb.tibble)){
par(mar=c(0,0,1,0),mgp=c(1.8,0.5,0),cex=1.5,cex.lab=1.5,cex.axis=1.3)
mx1 <- matrix(c(1,2),1,2,byrow=T)
layout(mx1)
lb <- lb.tibble[i,]
rb <- rb.tibble[i,]
box.plotter(rb,'green2','Unmined')
box.plotter(lb,'red3','Mined')
},
movie.name='mining_swimming_pools.gif',interval=.1,ani.width=1500,ani.height=750,loop=2
)
library(plot3D)
library(animation)
library(tidyverse)
#Assuming a bulk density of 3000 kg/m3
bd <- 2500 #kg/m3
lb.tds <- 8939 + 450 #CO2 + tds #kg/ha
lb.area <- 68 #ha
rb.area <- 118 #ha
rb.tds <- 203 #kg/ha
lb.void.rate.per.km <- lb.tds/bd*100
rb.void.rate.per.km <- rb.tds/bd*100
lb.tibble
lb.tibble <- tibble(rate=lb.void.rate.per.km,
years=1:50) %>%
rbind(tibble(rate=0,
years=rep(0,30))) %>%
arrange(years) %>%
mutate(cume.rate =cumsum(rate)) %>%
mutate(x0=25,
y0=50,
z0=cume.rate/(x0*y0),
x1=0,
y1=0,
z1=0)
lims <- c(min(lb.tibble$x0),max(lb.tibble$x1))
rb.tibble <- tibble(rate=rb.void.rate.per.km,
years=1:50) %>%
rbind(tibble(rate=0,
years=rep(0,30))) %>%
arrange(years)%>%
mutate(cume.rate =cumsum(rate)) %>%
mutate(x0=25,
y0=50,
z0=cume.rate/(x0*y0),
x1=0,
y1=0,
z1=0)
xlims <- c(0,25)
ylims <- c(0,50)
zlims <- c(0,max(lb.tibble$z0))
col='blue4'
box.plotter <- function(df,col,title){
with(df,
box3D(x0,y0,z0,
x1,y1,z1,
col=col,alpha=0.6,border='black',
theta=20,phi=20,xlab='',
xlim=xlims,ylim=ylims,zlim=zlims,
axes=F,box=F))
box3D(0,0,0,25,50,2,border='white',theta=20,phi=20,xlab='',
xlim=xlims,ylim=ylims,zlim=zlims,axes=F,box=F,
col='blue3',alpha=.2,add=T)
mtext(paste(title,'Year =',df$years,'Void space = ',
round(df$cume.rate,0),'m3'),
cex=2,font=2,
side=3,line=-1.5)
if(title=='Unmined'){
mtext('This movie shows the amount of void space created by chemical
weathering in mined (red) and unmined catchments (green)
in each square kilometer of the catchment. The light blue outline is the size
of an olympic swimming pool at 50 x 25 x 2 meters (2,500 cubic meters).
After 50 years,the unmined catchment has barely started to weather
out 1/5th the volume of a swimming pool, while the mined catchment has
created a void space equivalent to almost 10 olympic size swimming pools',
side=3,line=-16,cex=1.8)
}
}
saveGIF(
for(i in 1:nrow(lb.tibble)){
par(mar=c(0,0,1,0),mgp=c(1.8,0.5,0),cex=1.5,cex.lab=1.5,cex.axis=1.3)
mx1 <- matrix(c(1,2),1,2,byrow=T)
layout(mx1)
lb <- lb.tibble[i,]
rb <- rb.tibble[i,]
box.plotter(rb,'green2','Unmined')
box.plotter(lb,'red3','Mined')
},
movie.name='mining_swimming_pools.gif',interval=.1,ani.width=1500,ani.height=750
)
?rmarkdown::render_site
library(sf)
library(sf)
library(mapview)
library(sf)
library(mapview)
library(mapedit)
data <- tibble(lat=c(50,50.001),
long=c(-80,-80.001),
id=c(1,2),
some_info=c('Important','Detail'))
library(tidyverse)
library(tidyverse)
data <- tibble(lat=c(50,50.001),
long=c(-80,-80.001),
id=c(1,2),
some_info=c('Important','Detail'))
#Make up some data
sf.data <- tibble(lat=c(50,50.001),
long=c(-80,-80.001),
id=c(1,2),
some_info=c('Important','Detail')) %>%
st_as_sf(.,coords=c('long','lat'),crs=4326)
mapview(sf.data)
#Make up some data
sf.data <- tibble(lat=c(30,30.001),
long=c(-80,-80.001),
id=c(1,2),
some_info=c('Important','Detail')) %>%
st_as_sf(.,coords=c('long','lat'),crs=4326)
mapview(sf.data)
#Make up some data
sf.data <- tibble(lat=c(35,35.0001),
long=c(-80,-80.0001),
id=c(1,2),
some_info=c('Important','Detail')) %>%
st_as_sf(.,coords=c('long','lat'),crs=4326)
mapview(sf.data)
#Make up some data
sf.data <- tibble(lat=c(35,35.001),
long=c(-80,-80.0001),
id=c(1,2),
some_info=c('Important','Detail')) %>%
st_as_sf(.,coords=c('long','lat'),crs=4326)
mapview(sf.data)
#Make up some data near a road.
#I want to snap this data to the road
#
sf.data <- tibble(lat=c(35,35.001),
long=c(-80,-80.0001),
id=c(1,2),
road_name(1712,1711)) %>%
st_as_sf(.,coords=c('long','lat'),crs=4326)
#Make up some data near a road.
#I want to snap this data to the road
#
sf.data <- tibble(lat=c(35,35.001),
long=c(-80,-80.0001),
id=c(1,2),
road_name=c(1712,1711)) %>%
st_as_sf(.,coords=c('long','lat'),crs=4326)
mapview(sf.data)
snapped <- mapview(untethered) %>%
mapEdit(.,targetLayerID=untethered)
#Make up some data near a road.
#I want to snap this data to the road
#
untethered <- tibble(lat=c(35,35.001),
long=c(-80,-80.0001),
id=c(1,2),
road_name=c(1712,1711)) %>%
st_as_sf(.,coords=c('long','lat'),crs=4326)
snapped <- mapview(untethered) %>%
mapEdit(.,targetLayerID=untethered)
snapped <- mapview(untethered) %>%
mapEdit(.,targetLayerID='untethered')
snapped <- mapview(untethered) %>%
editMap(.,targetLayerID='untethered')
library(sf)
library(mapview)
library(mapedit)
library(tidyverse)
#Make up some data near a road.
#I want to snap this data to the road
#
untethered <- tibble(lat=c(35,35.001),
long=c(-80,-80.0001),
id=c(1,2),
road_name=c(1712,1711)) %>%
st_as_sf(.,coords=c('long','lat'),crs=4326)
#Snap the raw data to the road names
snapped <- mapview(untethered) %>%
editMap(.,targetLayerID='untethered')
#Snap the raw data to the road names
map <- mapview(untethered)
editMap(map,targetLayerID='untethered')
#Snap the raw data to the road names
map <- mapview(untethered)
#Snap the raw data to the road names
map <- mapview(untethered)
map
editMap(map,targetLayerID='untethered')
?editMap
editMap(map,targetLayerId='untethered')
#Move points
manually.snapped <- editMap(map,targetLayerId='untethered',record=T)
manually.snapped
manually.snapped$drawn
manually.snapped$edited
head(manually.snapped$edited)
names(manually.snapped$edited)
#Make up some data near a road.
#I want to snap this data to the road
#
untethered <- tibble(lat=c(35,35.001),
long=c(-80,-80.0001),
id=c(1,2),
road_name=c(1712,1711)) %>%
st_as_sf(.,coords=c('long','lat'),crs=4326)
#Snap the raw data to the road names
map <- mapview(untethered)
#Move points
manually.snapped <- editMap(map,targetLayerId='untethered',record=T)
#Make up some data near a road.
#I want to snap this data to the road
#
untethered <- tibble(lat=c(35,35.001),
long=c(-80,-80.0001),
id=c(1,2),
road_name=c(1712,1711)) %>%
st_as_sf(.,coords=c('long','lat'),crs=4326)
?editMap
untethered
?editMap
save(manually.snapped,file='snapped.RData')
load('snapped.RData')
manually.snapped$edited
getwd()
file.create('.nojekyll')
# Chunk 1
library(tidyverse)
# Chunk 2
ch2 = 16*10^-2
hc = 10^-4
fe3 = 4*10^-1
noc = 4*10^-5
co2c=.0001
h2oc=1
fe2=20*10^-7
temp=295.15
R = .008314
n2c=1
tibble(compound = c('no3','ch2o','h+','co2','n2','h2o','fe(oh)3','fe2+','Temp','R'),
`concentration or value`=c(noc,ch2,hc,co2c,n2c,h2oc,fe3,fe2,temp,R)) %>%
knitr::kable()
iron_reduction = -47 + R*temp*log((co2c*fe2^4*h2oc^11)/(ch2*fe3^4*hc^8))
iron_reduction
nitrate_reduction = -113 + R*temp*log((co2c^5*n2c^2*h2oc^7)/(hc^4*noc^4*ch2^5))
nitrate_reduction
rmarkdown::render_site()
rmarkdown::render_site()
devtools::install_github('richfitz/remake')
