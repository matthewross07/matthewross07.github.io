max.cast %>% filter(element=='NO3.N') %>%
filter(site=='RB') %>%
tail(.)
max.cast %>% filter(element=='NO3.N') %>%
filter(site=='RB') %>%
tail(.)
head(max.cast)
max.cume <- max.cast %>% group_by(element,site) %>%
mutate(kg.cume = cumsum(kg.ha)) %>%
filter(element=='NO3.N')
max.cume %>% filter(element=='NO3.N') %>%
filter(site=='RB') %>%
tail(.)
max.cume <- max.cast %>% group_by(element,site) %>%
mutate(kg.cume = cumsum(kg.ha,na.rm=T)) %>%
filter(element=='NO3.N') %>%
ggplot(.,aes(x=daily,y=kg.cume,color=site)) + geom_point()
?cumsum
max.cume <- max.cast %>% group_by(element,site) %>%
mutate(kg.fill = ts(.$kg.ha) %>%
na.interpolation(.) %>%
as.numeric(.)) %>%
mutate(kg.cume = cumsum(kg.fill,na.rm=T))
filter(element=='NO3.N') %>%
ggplot(.,aes(x=daily,y=kg.cume,color=site)) + geom_point()
max.cume <- max.cast %>% group_by(element,site) %>%
mutate(kg.fill = ts(.$kg.ha) %>%
na.interpolation(.) %>%
as.numeric(.)) %>%
mutate(kg.cume = cumsum(kg.fill,na.rm=T))
filter(element=='NO3.N') %>%
max.cume <- max.cast %>% group_by(element,site) %>%
mutate(kg.fill = ts(.$kg.ha) %>%
na.interpolation(.) %>%
as.numeric(.)) %>%
mutate(kg.cume = cumsum(kg.fill,na.rm=T))
filter(element=='NO3.N')
max.cume <- max.cast %>% group_by(element,site) %>%
mutate(kg.fill = ts(.$kg.ha) %>%
na.interpolation(.) %>%
as.numeric(.))
max.cume <- max.cast %>% group_by(element,site) %>%
mutate(kg.fill = ts(kg.ha) %>%
na.interpolation(.) %>%
as.numeric(.))
max.cume <- max.cast %>% group_by(element,site) %>%
mutate(kg.fill = ts(kg.ha) %>%
na.interpolation(.) %>%
as.numeric(.)) %>%
mutate(kg.cume = cumsum(kg.fill,na.rm=T))
max.cume <- max.cast %>% group_by(element,site) %>%
mutate(kg.fill = ts(kg.ha) %>%
na.interpolation(.) %>%
as.numeric(.))
str(max.cume)
max.cume <- max.cast %>% group_by(element,site) %>%
mutate(kg.fill = ts(kg.ha) %>%
na.interpolation(.) %>%
as.numeric(.))  %>%
mutate(kg.cume = cumsum(kg.fill,na.rm=T))
max.cume <- max.cast %>% group_by(element,site) %>%
mutate(kg.fill = ts(kg.ha) %>%
na.interpolation(.) %>%
as.numeric(.))  %>%
mutate(kg.cume = cumsum(kg.fill)) %>%
filter(element=='NO3.N')
ggplot(max.cume,aes(x=daily,y=kg.cume,color=site)) + geom_point()
cumifiter <- function(x){
cume <- x %>% group_by(element,site) %>%
mutate(kg.fill = ts(kg.ha) %>%
na.interpolation(.) %>%
as.numeric(.))  %>%
mutate(kg.cume = cumsum(kg.fill)) %>%
filter(element=='NO3.N')
return(cume)
}
cumifiter <- function(x){
cume <- x %>% group_by(element,site) %>%
mutate(kg.fill = ts(kg.ha) %>%
na.interpolation(.) %>%
as.numeric(.))  %>%
mutate(kg.cume = cumsum(kg.fill)) %>%
filter(element=='NO3.N')
return(cume)
}
cume.max <- cumifier(max.cast)
cumifier <- function(x){
cume <- x %>% group_by(element,site) %>%
mutate(kg.fill = ts(kg.ha) %>%
na.interpolation(.) %>%
as.numeric(.))  %>%
mutate(kg.cume = cumsum(kg.fill)) %>%
filter(element=='NO3.N')
return(cume)
}
cume.max <- cumifier(max.cast)
ggplot(max.cume,aes(x=daily,y=kg.cume,color=site)) + geom_point()
cume.min <- cumifier(min.cast)
cume.tot <- left_join(cume.max,cume.min,by='daily',suffix=c('.max','.min'))
cume.tot$kg.cume.mean <- (cume.tot$kg.cume.max +
cume.tot$kg.cume.min)/2
ggplot(cume.tot,aes(x=daily,ymin=kg.cume.min,ymax=kg.cume.max,color=site)) + geom_ribbon() + geom_line()
cume.tot <- left_join(cume.max,cume.min,by='daily',suffix=c('.max','.min'))
cume.tot$kg.cume.mean <- (cume.tot$kg.cume.max +
cume.tot$kg.cume.min)/2
ggplot(cume.tot,aes(x=daily,ymin=kg.cume.min,ymax=kg.cume.max,color=site.max)) + geom_ribbon() + geom_line()
ggplot(cume.tot,aes(x=daily,ymin=kg.cume.min,ymax=kg.cume.max,y=kg.cume.mean,color=site.max)) + geom_ribbon() + geom_line()
cume.tot <- left_join(cume.max,cume.min,by=c('daily','site','element'),suffix=c('.max','.min'))
cume.tot$kg.cume.mean <- (cume.tot$kg.cume.max +
cume.tot$kg.cume.min)/2
ggplot(cume.tot,aes(x=daily,ymin=kg.cume.min,ymax=kg.cume.max,y=kg.cume.mean,color=site)) + geom_ribbon() + geom_line()
cume.tot %>% filter(site %in% c('LB','RB')) %>%
ggplot(.,aes(x=daily,ymin=kg.cume.min,ymax=kg.cume.max,y=kg.cume.mean,color=site)) + geom_ribbon() + geom_line()
cume.tot %>% filter(site %in% c('LB','RB')) %>%
ggplot(.,aes(x=daily,ymin=kg.cume.min,ymax=kg.cume.max,y=kg.cume.mean,color=site)) + geom_ribbon() + geom_line() +
scale_y_log10()
cume.tot %>% filter(site %in% c('LB','RB')) %>%
ggplot(.,aes(x=daily,ymin=kg.cume.min,ymax=kg.cume.max,y=kg.cume.mean,color=site)) + geom_ribbon() + geom_line() +
scale_y_log10() + ylim(0.001,20)
cume.tot %>% filter(site %in% c('LB','RB')) %>%
ggplot(.,aes(x=daily,ymin=kg.cume.min,ymax=kg.cume.max,y=kg.cume.mean,color=site)) + geom_ribbon() + geom_line() +
scale_y_log10() + ylim(0.001,23)
cume.tot %>% filter(site %in% c('LB','RB')) %>%
ggplot(.,aes(x=daily,ymin=kg.cume.min,ymax=kg.cume.max,y=kg.cume.mean,color=site)) + geom_ribbon() + geom_line()
cume.tot %>% filter(site %in% c('LB','RB')) %>%
ggplot(.,aes(x=daily,ymin=kg.cume.min,ymax=kg.cume.max,y=kg.cume.mean,color=site)) + geom_ribbon(color=site) + geom_line()
cume.tot %>% filter(site %in% c('LB','RB')) %>%
ggplot(.,aes(x=daily,ymin=kg.cume.min,ymax=kg.cume.max,y=kg.cume.mean,color=site,fill=site)) + geom_ribbon() + geom_line()
ggplot(.,aes(x=daily,ymin=kg.cume.min,ymax=kg.cume.max,y=kg.cume.mean,color=site,fill=site)) + geom_ribbon(alpha=0.5) + geom_line()
cume.tot %>% filter(site %in% c('LB','RB')) %>%
ggplot(.,aes(x=daily,ymin=kg.cume.min,ymax=kg.cume.max,y=kg.cume.mean,color=site,fill=site)) + geom_ribbon(alpha=0.5) + geom_line()
cume.tot %>% filter(site %in% c('LB','RB')) %>%
ggplot(.,aes(x=daily,ymin=kg.cume.min,ymax=kg.cume.max,y=kg.cume.mean,color=site,fill=site)) + geom_ribbon(alpha=0.3) + geom_line()
cume.tot %>% filter(site %in% c('LB','RB')) %>%
ggplot(.,aes(x=daily,ymin=kg.cume.min,ymax=kg.cume.max,color=site,fill=site)) + geom_ribbon(alpha=0.3) + geom_line(aes(y=kg.cume.mean))
cume.tot %>% filter(site %in% c('LB','RB')) %>%
ggplot(.,aes(x=daily,color=site,fill=site)) +
geom_ribbon(aes(ymin=kg.cume.min,ymax=kg.cume.max),alpha=0.3) + geom_line(aes(y=kg.cume.mean))
cume.tot %>% filter(site %in% c('LB','RB')) %>%
ggplot(.,aes(x=daily)) +
geom_ribbon(aes(ymin=kg.cume.min,ymax=kg.cume.max,fill=site),alpha=0.3) + geom_line(aes(y=kg.cume.mean,color=site))
no3.col <- c('#2166ac','#b2182b')
cume.tot %>% filter(site %in% c('LB','RB')) %>%
ggplot(.,aes(x=daily)) +
geom_ribbon(aes(ymin=kg.cume.min,ymax=kg.cume.max,fill=site),alpha=0.3) + geom_line(aes(y=kg.cume.mean,color=site)) + scale_color_manual(values=no3.col) + scale_fill_manual(values=no3.col)
getwd()
save(cume.tot,file='cume.no3.RData')
library(tidyverse)
load('cume.no3.RData')
cume.tot %>% filter(site %in% c('LB','RB')) %>%
ggplot(.,aes(x=daily)) +
geom_ribbon(aes(ymin=kg.cume.min,ymax=kg.cume.max,fill=site),alpha=0.3) + geom_line(aes(y=kg.cume.mean,color=site)) + scale_color_manual(values=no3.col) + scale_fill_manual(values=no3.col)
library(tidyverse)
load('cume.no3.RData')
no3.col <- c('#2166ac','#b2182b')
cume.tot %>% filter(site %in% c('LB','RB')) %>%
ggplot(.,aes(x=daily)) +
geom_ribbon(aes(ymin=kg.cume.min,ymax=kg.cume.max,fill=site),alpha=0.3) + geom_line(aes(y=kg.cume.mean,color=site)) + scale_color_manual(values=no3.col) + scale_fill_manual(values=no3.col)
?layer
??layer
?stack
rmarkdown::render_site()
rmarkdown::render_site()
install.packages("LAGOSNE")
rmarkdown::render_site()
rmarkdown::render_site()
library(tidyverse)
library(tidyverse)
groups <- 1:10000
df <- tibble(groups=rep(groups,each=100)) %>%
mutate(random_value=runif(n=nrow(.),min=0,max=100000))
system.time({
df %>%
group_by(groups) %>%
mutate(max=max(random_value)) %>%
filter(random_value == max)
})
system.time({
df %>%
group_by(groups) %>%
#mutate(max=max(random_value)) %>%
filter(random_value == max(random_value))
})
system.time({
df %>%
group_by(groups) %>%
mutate(max_value=max(random_value)) %>%
filter(random_value == max)
})
system.time({
df %>%
group_by(groups) %>%
mutate(max_value=max(random_value)) %>%
filter(random_value == max_value)
})
groups <- 1:20000
df <- tibble(groups=rep(groups,each=100)) %>%
mutate(random_value=runif(n=nrow(.),min=0,max=100000))
system.time({
df %>%
group_by(groups) %>%
mutate(max_value=max(random_value)) %>%
filter(random_value == max_value)
})
system.time({
df %>%
group_by(groups) %>%
mutate(max_value=max(random_value)) %>%
ungroup() %>%
filter(random_value == max_value)
})
knit_with_parameters('~/Dropbox/Personal Website/GithubWebsite/Ross-CSU-CV.Rmd')
rmarkdown::render()
rmarkdown::render('Ross-CSU-CV.Rmd')
rmarkdown::render('Ross-CSU-CV.Rmd')
?render
rmarkdown::render('Ross-CSU-CV.Rmd',output_format='pdf')
list.files()
library(plot3D)
library(animation)
library(tidyverse)
#Assuming a bulk density of 3000 kg/m3
bd <- 2500 #kg/m3
lb.tds <- 8939 + 450 #CO2 + tds #kg/ha
lb.area <- 68 #ha
rb.area <- 118 #ha
rb.tds <- 203 #kg/ha
lb.void.rate.per.km <- lb.tds/bd*100
rb.void.rate.per.km <- rb.tds/bd*100
lb.tibble <- tibble(rate=lb.void.rate.per.km,
years=1:50) %>%
mutate(cume.rate =cumsum(rate)) %>%
mutate(x0=cume.rate^(1/3)/2*-1,
y0=x0,
z0=y0,
x1=cume.rate^(1/3)/2,
y1=x1,
z1=x1)
lims <- c(min(lb.tibble$x0),max(lb.tibble$x1))
rb.tibble <- tibble(rate=rb.void.rate.per.km,
years=1:50) %>%
mutate(cume.rate =cumsum(rate)) %>%
mutate(x0=cume.rate^(1/3)/2*-1,
y0=x0,
z0=y0,
x1=cume.rate^(1/3)/2,
y1=x1,
z1=x1)
lims <- c(min(lb.tibble$x0),max(lb.tibble$x1))
col='blue4'
box.plotter <- function(df,col,title){
with(df,
box3D(x0,y0,z0,
x1,y1,z1,
col=col,alpha=0.5,border='black',
theta=20,phi=20,xlab='',
xlim=lims,ylim=lims,zlim=lims,
axes=F,box=F))
mtext(paste(title,'Year =',i,'Void space = ',
round(df$cume.rate,0),'m3'),
side=3,line=-1)
}
saveGIF(
for(i in 1:nrow(lb.tibble)){
par(mar=c(0,0,0,0),mgp=c(1.8,0.5,0),cex=1.5,cex.lab=1.5,cex.axis=1.3)
mx1 <- matrix(c(1,2),1,2,byrow=T)
layout(mx1)
lb <- lb.tibble[i,]
rb <- rb.tibble[i,]
box.plotter(lb,'red4','LB')
box.plotter(rb,'blue4','RB')
},
movie.name='mining.gif',interval=.1,ani.width=800,ani.height=400
)
library(plot3D)
library(animation)
library(tidyverse)
#Assuming a bulk density of 3000 kg/m3
bd <- 2500 #kg/m3
lb.tds <- 8939 + 450 #CO2 + tds #kg/ha
lb.area <- 68 #ha
rb.area <- 118 #ha
rb.tds <- 203 #kg/ha
lb.void.rate.per.km <- lb.tds/bd*100
rb.void.rate.per.km <- rb.tds/bd*100
lb.tibble
lb.tibble <- tibble(rate=lb.void.rate.per.km,
years=1:50) %>%
rbind(tibble(rate=0,
years=rep(0,30))) %>%
arrange(years) %>%
mutate(cume.rate =cumsum(rate)) %>%
mutate(x0=25,
y0=50,
z0=cume.rate/(x0*y0),
x1=0,
y1=0,
z1=0)
lims <- c(min(lb.tibble$x0),max(lb.tibble$x1))
rb.tibble <- tibble(rate=rb.void.rate.per.km,
years=1:50) %>%
rbind(tibble(rate=0,
years=rep(0,30))) %>%
arrange(years)%>%
mutate(cume.rate =cumsum(rate)) %>%
mutate(x0=25,
y0=50,
z0=cume.rate/(x0*y0),
x1=0,
y1=0,
z1=0)
xlims <- c(0,25)
ylims <- c(0,50)
zlims <- c(0,max(lb.tibble$z0))
col='blue4'
box.plotter <- function(df,col,title){
with(df,
box3D(x0,y0,z0,
x1,y1,z1,
col=col,alpha=0.6,border='black',
theta=20,phi=20,xlab='',
xlim=xlims,ylim=ylims,zlim=zlims,
axes=F,box=F))
box3D(0,0,0,25,50,2,border='white',theta=20,phi=20,xlab='',
xlim=xlims,ylim=ylims,zlim=zlims,axes=F,box=F,
col='blue3',alpha=.2,add=T)
mtext(paste(title,'Year =',df$years,'Void space = ',
round(df$cume.rate,0),'m3'),
cex=2,
side=3,line=-1.5)
if(title=='Unmined'){
mtext('This movie shows the amount of void space created by chemical
weathering in mined (red) and unmined catchments (green)
in each square kilometer of the catchment. The light blue outline is the size
of an olympic swimming pool at 50 x 25 x 2 meters (2,500 cubic meters).
After 50 years,the unmined catchment has barely started to weather
out 1/5th the volume of a swimming pool, while the mined catchment has
created a void space equivalent to almost 10 olympic size swimming pools',
side=3,line=-16,cex=1.7)
}
}
saveGIF(
for(i in 1:nrow(lb.tibble)){
par(mar=c(0,0,1,0),mgp=c(1.8,0.5,0),cex=1.5,cex.lab=1.5,cex.axis=1.3)
mx1 <- matrix(c(1,2),1,2,byrow=T)
layout(mx1)
lb <- lb.tibble[i,]
rb <- rb.tibble[i,]
box.plotter(rb,'green2','Unmined')
box.plotter(lb,'red3','Mined')
},
movie.name='mining_swimming_pools.gif',interval=.1,ani.width=1500,ani.height=750,loop=2
)
library(plot3D)
library(animation)
library(tidyverse)
#Assuming a bulk density of 3000 kg/m3
bd <- 2500 #kg/m3
lb.tds <- 8939 + 450 #CO2 + tds #kg/ha
lb.area <- 68 #ha
rb.area <- 118 #ha
rb.tds <- 203 #kg/ha
lb.void.rate.per.km <- lb.tds/bd*100
rb.void.rate.per.km <- rb.tds/bd*100
lb.tibble
lb.tibble <- tibble(rate=lb.void.rate.per.km,
years=1:50) %>%
rbind(tibble(rate=0,
years=rep(0,30))) %>%
arrange(years) %>%
mutate(cume.rate =cumsum(rate)) %>%
mutate(x0=25,
y0=50,
z0=cume.rate/(x0*y0),
x1=0,
y1=0,
z1=0)
lims <- c(min(lb.tibble$x0),max(lb.tibble$x1))
rb.tibble <- tibble(rate=rb.void.rate.per.km,
years=1:50) %>%
rbind(tibble(rate=0,
years=rep(0,30))) %>%
arrange(years)%>%
mutate(cume.rate =cumsum(rate)) %>%
mutate(x0=25,
y0=50,
z0=cume.rate/(x0*y0),
x1=0,
y1=0,
z1=0)
xlims <- c(0,25)
ylims <- c(0,50)
zlims <- c(0,max(lb.tibble$z0))
col='blue4'
box.plotter <- function(df,col,title){
with(df,
box3D(x0,y0,z0,
x1,y1,z1,
col=col,alpha=0.6,border='black',
theta=20,phi=20,xlab='',
xlim=xlims,ylim=ylims,zlim=zlims,
axes=F,box=F))
box3D(0,0,0,25,50,2,border='white',theta=20,phi=20,xlab='',
xlim=xlims,ylim=ylims,zlim=zlims,axes=F,box=F,
col='blue3',alpha=.2,add=T)
mtext(paste(title,'Year =',df$years,'Void space = ',
round(df$cume.rate,0),'m3'),
cex=2,font=2,
side=3,line=-1.5)
if(title=='Unmined'){
mtext('This movie shows the amount of void space created by chemical
weathering in mined (red) and unmined catchments (green)
in each square kilometer of the catchment. The light blue outline is the size
of an olympic swimming pool at 50 x 25 x 2 meters (2,500 cubic meters).
After 50 years,the unmined catchment has barely started to weather
out 1/5th the volume of a swimming pool, while the mined catchment has
created a void space equivalent to almost 10 olympic size swimming pools',
side=3,line=-16,cex=1.8)
}
}
saveGIF(
for(i in 1:nrow(lb.tibble)){
par(mar=c(0,0,1,0),mgp=c(1.8,0.5,0),cex=1.5,cex.lab=1.5,cex.axis=1.3)
mx1 <- matrix(c(1,2),1,2,byrow=T)
layout(mx1)
lb <- lb.tibble[i,]
rb <- rb.tibble[i,]
box.plotter(rb,'green2','Unmined')
box.plotter(lb,'red3','Mined')
},
movie.name='mining_swimming_pools.gif',interval=.1,ani.width=1500,ani.height=750,loop=2
)
library(plot3D)
library(animation)
library(tidyverse)
#Assuming a bulk density of 3000 kg/m3
bd <- 2500 #kg/m3
lb.tds <- 8939 + 450 #CO2 + tds #kg/ha
lb.area <- 68 #ha
rb.area <- 118 #ha
rb.tds <- 203 #kg/ha
lb.void.rate.per.km <- lb.tds/bd*100
rb.void.rate.per.km <- rb.tds/bd*100
lb.tibble
lb.tibble <- tibble(rate=lb.void.rate.per.km,
years=1:50) %>%
rbind(tibble(rate=0,
years=rep(0,30))) %>%
arrange(years) %>%
mutate(cume.rate =cumsum(rate)) %>%
mutate(x0=25,
y0=50,
z0=cume.rate/(x0*y0),
x1=0,
y1=0,
z1=0)
lims <- c(min(lb.tibble$x0),max(lb.tibble$x1))
rb.tibble <- tibble(rate=rb.void.rate.per.km,
years=1:50) %>%
rbind(tibble(rate=0,
years=rep(0,30))) %>%
arrange(years)%>%
mutate(cume.rate =cumsum(rate)) %>%
mutate(x0=25,
y0=50,
z0=cume.rate/(x0*y0),
x1=0,
y1=0,
z1=0)
xlims <- c(0,25)
ylims <- c(0,50)
zlims <- c(0,max(lb.tibble$z0))
col='blue4'
box.plotter <- function(df,col,title){
with(df,
box3D(x0,y0,z0,
x1,y1,z1,
col=col,alpha=0.6,border='black',
theta=20,phi=20,xlab='',
xlim=xlims,ylim=ylims,zlim=zlims,
axes=F,box=F))
box3D(0,0,0,25,50,2,border='white',theta=20,phi=20,xlab='',
xlim=xlims,ylim=ylims,zlim=zlims,axes=F,box=F,
col='blue3',alpha=.2,add=T)
mtext(paste(title,'Year =',df$years,'Void space = ',
round(df$cume.rate,0),'m3'),
cex=2,font=2,
side=3,line=-1.5)
if(title=='Unmined'){
mtext('This movie shows the amount of void space created by chemical
weathering in mined (red) and unmined catchments (green)
in each square kilometer of the catchment. The light blue outline is the size
of an olympic swimming pool at 50 x 25 x 2 meters (2,500 cubic meters).
After 50 years,the unmined catchment has barely started to weather
out 1/5th the volume of a swimming pool, while the mined catchment has
created a void space equivalent to almost 10 olympic size swimming pools',
side=3,line=-16,cex=1.8)
}
}
saveGIF(
for(i in 1:nrow(lb.tibble)){
par(mar=c(0,0,1,0),mgp=c(1.8,0.5,0),cex=1.5,cex.lab=1.5,cex.axis=1.3)
mx1 <- matrix(c(1,2),1,2,byrow=T)
layout(mx1)
lb <- lb.tibble[i,]
rb <- rb.tibble[i,]
box.plotter(rb,'green2','Unmined')
box.plotter(lb,'red3','Mined')
},
movie.name='mining_swimming_pools.gif',interval=.1,ani.width=1500,ani.height=750
)
?rmarkdown::render_site
