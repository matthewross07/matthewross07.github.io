flux.un
mean(daily.flux$date)
brks=mdy(c('10/1/14','4/1/15','10/1/15'))
daily.flux$site.c <- factor(daily.flux$site,
levels=c('RB','LB','LF','MR'))
cume.maj <- filter(daily.flux,
element %in% c('SO4','Mg','Ca','TDS*')) %>%
ggplot(aes(x=date,y=kg.cume,color=site.c,size=site)) +
scale_size_manual(values=c(1.2,1.2,.9,.9),guide=F) +
geom_line(size=1.1) +
facet_wrap(~Ion, ncol=4) +
scale_color_manual(values=site.cols,guide=F) +
scale_x_date(labels = date_format("%m/%y"),breaks=brks) +
scale_y_log10() +
coord_cartesian(ylim=c(0.1,10000)) +
theme(panel.margin.x=unit(1.8,'lines')) +
ylab('Cume. flux (kg/ha)') +
xlab('')
cume.maj
cairo_pdf(filename='DailyFlux.pdf',family='Arial',width=9,height=8)
grid.newpage()
pushViewport(viewport(layout=grid.layout(3,1,heights=c(0.3,0.4,0.3))))
print(flux.un, vp=viewport(layout.pos.row=1,layout.pos.col=1))
print(flux.mine, vp=viewport(layout.pos.row=2,layout.pos.col=1))
print(cume.maj,vp=viewport(layout.pos.row=3,layout.pos.col=1))
dev.off()
sites <- c('LF_2','MR_7','RB_2','LB_2')
abb <- c('LF','MR','RB','LB')
elements <- c('Ca','Mg','SO4','Na','K','Cl','NO3.N','TDS','HCO3')
#Remove a few nonsensical points:
j.stor <- list()
i.stor <- list()
ic.sc <- ic.sc[ic.sc$p.base < 1.01,]
lmp <- function (modelobject) {
if (class(modelobject) != "lm") stop("Not an object of class 'lm' ")
f <- summary(modelobject)$fstatistic
p <- pf(f[1],f[2],f[3],lower.tail=F)
attributes(p) <- NULL
return(p)
}
ic.sc$p.base <- ic.sc$Q.base/ic.sc$Q.mm
leaf.period <- ints(c('5/1/2015 00:00:00','10/1/2015 00:00:00'))
ic.sc$Leaves <- 'Off'
ic.sc$Leaves[ic.sc$min10 %within% leaf.period] <- 'On'
q$Leaves <- 'Off'
q$Leaves[q$min10 %within% leaf.period] <- 'On'
x.l<- list()
ct <- 0
rb.lk <- ymd_hms(c('2015-04-04 06:00:00','2015-04-03 11:40:00','2014-10-03 10:10:00'),tz=mytimezone)
ic.sc <- ic.sc[!ic.sc$min10 %in% rb.lk,]
ic.sc.wat <- ic.sc[ic.sc$min10 %within% wat.year,]
coef.list <- list()
eq.list <- list()
names(ic.sc.wat)
(na.omit(ic.sc.wat) %>%
filter(element == 'NO3.N')) %>%
ggplot(aes(x=Q.mm,y=mg.l,color=month(min10))) + facet_wrap(~Site,scales='free') + geom_point()
for(i in 1:length(sites)){
for(j in 1:length(elements)){
ct <- ct + 1
print(ct)
d <- ic.sc.wat[ic.sc.wat$Site == sites[i] & ic.sc.wat$element == elements[j],] %>%
filter(min10 > mdy_hms('01/10/2015 00:00:00',tz=mytimezone))
mod.sc.tt.s <- lm(mg.l~sc*p.base,data=d)
coefs <- signif(summary(mod.sc.tt.s)$coef[,1],2)
dat <- q[,c('min10',names(q)[grep(abb[i],names(q))],'season')]
names(dat) <- c('min10','P','Q.mm','Q.m3s','T','sc','base','event','season')
dat$p.base <- dat$base/dat$Q.mm
mod.fit <- predict.lm(mod.sc.tt.s, newdata=dat,interval='confidence')
names(mod.fit) <- c('fit','lwr','upr')
mgl <- mod.fit[,1]
low <- mod.fit[,2]
high <- mod.fit[,3]
p.xts <- xts(cbind(lwr=low,fit=mgl,upr=high),order.by=q$min10)
mgl[mgl<0] <- 0
dat$lps <- dat[,'Q.m3s']*1000
dat$conc <- mgl
dat$max.conc <- high
dat$min.conc <- low
dat$min10.flx <- (dat$conc*dat$lps)*(600/(1000*1000))
#
# #kg/10min
#
# #mm/10min
# q.mm.10 <- dat$Q.mm/6
#
# #m/10min
# q.m.10 <- q.mm.10/(1000)
#
# #m/10min ha
# q.ha.10 <- q.m.10*10000
#
# #conc in kg/m3
# kg.m3 <- dat$conc/1000
#
# flx.area <- q.ha.10*kg.m3
# TRIPLE CHECK
dat$area.flx <- (dat$conc*.001)*(dat$Q.mm/(6*1000))*10000
#min flux
dat$min.area.flx <- (dat$min.conc*.001)*(dat$Q.mm/(6*1000))*10000
dat$max.area.flx <- (dat$max.conc*.001)*(dat$Q.mm/(6*1000))*10000
#kg/ha/10min
dat$element <- elements[j]
dat$site <- abb[i]
dat$r.sq <- summary(mod.sc.tt.s)$adj.r.squared
dat$p <- lmp(mod.sc.tt.s)
cf.df <- data.frame(beta=names(coefs),
value=coefs,
site=rep(sites[i],length(coefs)),
element=rep(elements[j],length(coefs)),
p.value = rep(lmp(mod.sc.tt.s),length(coefs)),
adj.r2 = rep(summary(mod.sc.tt.s)$adj.r.squared,length(coefs)))
eq <- paste('[',elements[j],'] = ',coefs[1],' + ',
coefs[2],'*SC + ',coefs[3],'*BF(%) + ',
coefs[4],'*SC*BF(%)',sep='')
dat$eq = eq
j.stor[[j]] <- dat
coef.list[[ct]] <- cf.df
}
site.dat <- do.call('rbind',j.stor)
i.stor[[i]] <- site.dat
}
coef.dat <- do.call('rbind',coef.list)
flux.dat <- do.call('rbind',i.stor)
flux.dat$area.flx[is.na(flux.dat$area.flx)] <- 0 # Change zero flow times to zero flux instead of na flux
flux.dat$daily <- as.Date(flux.dat$min10)
fl.area <-  dcast(flux.dat,site~element,value.var='area.flx',fun.aggregate=sum,na.rm=T)
fl.area$type <- 'pred'
fl.max <- dcast(flux.dat,site~element,value.var='max.area.flx',fun.aggregate=sum,na.rm=T)
fl.max$type <- 'max'
fl.min <- dcast(flux.dat,site~element,value.var='min.area.flx',fun.aggregate=sum,na.rm=T)
fl.min$type <- 'min'
fl.max$TDS-fl.area$TDS
fl.tot <- rbind(fl.min,fl.area,fl.max)
fl.tot[,c('site','NO3.N','type')]
p.area <- dcast(flux.dat,site~element,value.var='p',fun.aggregate=median,na.rm=T)
p.area
r.area <- dcast(flux.dat,element~site,value.var='r.sq',fun.aggregate=median,na.rm=T)
p.area <- dcast(flux.dat,element~site,value.var='p',fun.aggregate=median,na.rm=T)
fl.area$TDS.ind <- rowSums(fl.area[,2:8])
#Raw data is at 10 minute interval much faster to plot at 6 hour interval
seq.4hr <- round_minute(rep(seq(q$min10[1]+60*60,q$min10[nrow(q)],length=365*6),each=4*6),60)
min.seq <- round_minute(seq(min(q$min10),max(q$min10),length=365*24*6),10)
min.df <- data.frame(min10=min.seq,hr4=seq.4hr)
#Grab flux data
#Merge with 6 hourly column
flux.dat <- merge(flux.dat,min.df,by='min10')
#Summarise by daily flux value
f.cast <- dcast(flux.dat,daily+site+element~.,value.var='area.flx',sum)
max.cast <- dcast(flux.dat,daily+site+element~.,value.var='max.area.flx',sum)
min.cast <- dcast(flux.dat,daily+site+element~.,value.var='min.area.flx',sum)
#Rename. Values are in kg/ha/day
names(f.cast) <- c('date','site','element','kg.ha')
table(f.cast$element)
no3.flux <- f.cast %>%
filter(element=='NO3.N')
no3.flux %>% filter(site=='LB') %>% dplyr::select(kg.ha) %>% sum(.)
#Merge with molar concentration
f.cast <- merge(f.cast,moles,by='element',all.x=T)
#Calculate molar flux
f.cast$Kmoles.ha <- f.cast$kg.ha/f.cast$moles # kmoles/ha
#Calculate charge flux
f.cast$Keq.ha <- f.cast$Kmoles.ha*f.cast$charge #Keq/ha
#Order by date then site.
f.cast <- arrange(f.cast,date,site) %>% dplyr::select(-moles,-charge)
#remove raster and magicaxis package that breaks dplyr functionality
detach(package:raster)
detach(package:magicaxis)
library(dplyr)
# Filter to exclude Nitrate (bad data) TDS (already summed) and HCO3 as modeled from sample charge balance
df <- filter(f.cast,!element %in% c('TDS','HCO3','NO3.N')) %>%
group_by(site,date) %>%
#Sum charge balance per day at each site. This positive number equals the charge balance met by HCO3-
summarise(Keq.ha = -1*sum(Keq.ha,na.rm=T)) %>% arrange(date,site)
df$Kmoles.ha <- df$Keq.ha*-1 # Convert to moles by multiplying with the charge (-1)
df$kg.ha <- df$Kmoles.ha*as.numeric(filter(moles,element == 'HCO3') %>%
dplyr::select(moles))
df$element <- 'HCO3*' #Label element
df <- as.data.frame(dplyr::select(df, element, date, site, kg.ha,Kmoles.ha,Keq.ha))
daily.flux <- rbind(df,filter(f.cast, element != 'NO3.N'))
tds <- filter(daily.flux,!element %in% c('TDS','HCO3')) %>%
group_by(site,date) %>%
summarise(kg.ha = sum(kg.ha,na.rm=T),
Kmoles.ha=sum(Kmoles.ha),na.rm=T) %>%
mutate(Keq.ha = NA,element='TDS*') %>%
dplyr::select(element,date,site,kg.ha,Kmoles.ha,Keq.ha)
daily.flux <- rbind(daily.flux,as.data.frame(tds))
daily.sum <- dcast(daily.flux,site~element,value.var='kg.ha',fun.aggregate=sum,na.rm=T)
eq.f <- dcast(flux.dat, element~site,value.var='eq',first)
eq.f <- cbind(eq.f,r.area,p.area)
#write.csv(eq.f, file='ModelEquations.csv')
#save(flux.dat,daily.flux,file='~/Dropbox/Shared Science/NSF_MTM_All/MTM_MudRiver/tidy_data/Flux.Dat.RData')
#write.csv(fl.tot,'flux.dat.minmax.csv')
#ggplotly(m.g)
#fl.area$type <- 'flux'
r.area$type <- 'r2'
#fl.area <- rbind(fl.area,r.area)
#write.csv(fl.area,'flux.kg.ha.csv')
fl.melt <- melt(fl.area,id.vars=c('site','TDS.ind'),value.name='kg.ha')
#dev.off()
names(max.cast)[4] <- 'kg.ha'
names(min.cast)[4] <- 'kg.ha'
str(max.cast)
names(daily.flux)
setwd("~/Dropbox/My Research/MTM.BGC.Flux/BGC.Figures")
site.cols <- c('#2166ac','#b2182b','#92c5de','#f4a582')
pos <- c(.1,.6)
ic.sc.ions <- function(){
cairo_pdf(filename='IC.SC.MajorIons.pdf',width=8,height=2.5,family='Arial')
ic.sc.big.ions <- ic.sc[ic.sc$element %in% c('Ca','Mg','SO4'),]
ggplot(ic.sc.big.ions,aes(x=sc,y=mg.l,color=name)) + geom_point(shape=20) +
facet_wrap(~element,ncol=3) +
ylab('Concentration (mg/L)') +
xlab(expression(paste('Conductivity (',mu,'S/cm)',sep=''))) +
theme(legend.position=pos) +
scale_colour_manual(values=site.cols,name='Site')
dev.off()
}
ic.sc.ions()
meq.sum$Site <- gsub('_2','',meq.sum$Site)
meq.sum$Site <- gsub('_7','',meq.sum$Site)
meq.sum$Site <- factor(meq.sum$Site,levels=c('RB','LB','LF','MR'))
CO2.st <-meq.sum$co2.strength <- ((meq.sum$HCO3-0.5*(meq.sum$Ca+meq.sum$Mg))/(0.5*(meq.sum$Ca+meq.sum$Mg)))*100
co2.st.g <-   ggplot(meq.sum,aes(y=co2.strength,x=Site,fill=Site)) +
geom_violin(width=1.5,position='dodge') + ylab('CO2 Sink Strength (%)') +
ylim(-100,300) +
geom_hline(aes(yintercept=0)) +
scale_fill_manual(name='',values=site.cols) +
theme(legend.position=c(.30,.7)) +
geom_boxplot(fill=NA,color='black',width=0.2,show.legend=F)
#Import literature ratio values.
lit <- read.csv('~/Dropbox/Shared Science/NSF_MTM_All/MTM_Literature/LiteratureWeathering/CaMgNaRatios.csv')
molar.sum$Site <- gsub("_2",'',molar.sum$Site)
molar.sum$Site <- gsub('_7','',molar.sum$Site)
molar.sum$Site <- factor(molar.sum$Site, levels=c('RB','LB','LF','MR'))
molar.sum$Study <- 'This study'
cairo_pdf(filename='CarbonateRatio.pdf',width=8,height=4,family='Arial')
cana.g <- ggplot(molar.sum,aes(x=Ca/Na,y=Mg/Na,color=Site,shape=Study)) +
scale_x_log10(limits=c(0.1,100),breaks=c(0.1,1,10,100)) +
scale_y_log10(limits=c(0.1,100),breaks=c(0.1,1,10,100)) +
scale_color_manual(values=site.cols,guide=F) +
geom_point(data=lit,aes(x=Ca.Na,y=Mg.Na,shape=Study),color='gray20',size=2.4) +
scale_shape_manual(values=c(18,4,0,20),name='') +
theme(legend.position=c(0.2,0.8)) +
geom_point(size=1.8)
multiplot(cana.g,co2.st.g,cols=2)
dev.off()
#ggplotly(u.g)
#Some ratio plots
site.cols <- c('#2166ac','#b2182b','#92c5de','#f4a582')
element.cols <- c('#000000','#525252','#737373','#bdbdbd','#d1e5f0','#2166ac','#67001f')
daily.flux$Ion <- factor(daily.flux$element,
levels=c('Na','K','Mg','Ca','Cl','HCO3*','HCO3','SO4','TDS','TDS*'))
daily.flux <- arrange(daily.flux,date,site,Ion)
daily.flux$site <- factor(daily.flux$site,
levels=c('LB','MR','RB','LF'))
names(daily.flux)
s <- daily.flux %>% group_by(element,site) %>%
mutate(kg.cume = cumsum(kg.ha),
Keq.cume = cumsum(Keq.ha),
Kmole.cume=cumsum(Kmoles.ha))
daily.flux$kg.cume <- s$kg.cume
daily.flux$Keq.cume <- s$Keq.cume
daily.flux$Kmole.cume <- s$Kmole.cume
flux.mine <-
filter(daily.flux,
!element %in% c('TDS', 'HCO3', 'NO3.N', 'TDS*') &
site %in% c('LB', 'MR')) %>%
ggplot(aes(x = date, y = kg.ha, fill = Ion)) +
geom_area(stat = 'identity') +
facet_wrap( ~ site, ncol = 2) +
coord_cartesian(ylim = c(0, 100)) +
scale_fill_manual(values = element.cols) +
ylab('') +
theme(
legend.position = c(.1, .65),
panel.margin.x=unit(2,'lines')
) +
scale_x_date(labels = date_format("%m/%y")) +
ylab(expression(paste('Flux (kg ',ha^-1, day^-1,')',sep=''))) +
xlab('') +
guides(fill = guide_legend(ncol = 2, title.hjust = 0.3))
flux.mine
flux.un <-
filter(daily.flux,
!element %in% c('TDS', 'HCO3', 'NO3.N', 'TDS*') &
site %in% c('RB', 'LF')) %>%
ggplot(aes(x = date, y = kg.ha, fill = Ion)) +
geom_area(stat = 'identity') +
facet_wrap( ~ site, ncol = 2) +
coord_cartesian(ylim = c(0, 10)) +
scale_fill_manual(values = element.cols, guide=F) +
theme(panel.margin.x=unit(2,'lines'),
axis.title.x = element_blank(),
axis.text.x = element_blank()) +
ylab(expression(paste('Flux (kg ',ha^-1, day^-1,')',sep='')))
flux.un
mean(daily.flux$date)
brks=mdy(c('10/1/14','4/1/15','10/1/15'))
daily.flux$site.c <- factor(daily.flux$site,
levels=c('RB','LB','LF','MR'))
cume.maj <- filter(daily.flux,
element %in% c('SO4','Mg','Ca','TDS*')) %>%
ggplot(aes(x=date,y=kg.cume,color=site.c,size=site)) +
scale_size_manual(values=c(1.2,1.2,.9,.9),guide=F) +
geom_line(size=1.1) +
facet_wrap(~Ion, ncol=4) +
scale_color_manual(values=site.cols,guide=F) +
scale_x_date(labels = date_format("%m/%y"),breaks=brks) +
scale_y_log10() +
coord_cartesian(ylim=c(0.1,10000)) +
theme(panel.margin.x=unit(1.8,'lines')) +
ylab('Cume. flux (kg/ha)') +
xlab('')
cume.maj
cairo_pdf(filename='DailyFlux.pdf',family='Arial',width=9,height=8)
grid.newpage()
pushViewport(viewport(layout=grid.layout(3,1,heights=c(0.3,0.4,0.3))))
print(flux.un, vp=viewport(layout.pos.row=1,layout.pos.col=1))
print(flux.mine, vp=viewport(layout.pos.row=2,layout.pos.col=1))
print(cume.maj,vp=viewport(layout.pos.row=3,layout.pos.col=1))
dev.off()
names(daily.flux)
daily.flux %>%
filter(element=='NO3.N') %>%
ggplot(.,aes(x=date,y=kg.cume)) +
geom_line() +
facet_wrap(~site)
table(daily.flux$element)
max.cast %>% group_by(element,site) %>%
mutate(kg.cume = cumsum(kg.ha)) %>%
filter(element=='NO3.N') %>%
ggplot(.,aes(x=date,y=kg.cume)) +
geom_line() +
facet_wrap(~site)
max.cast %>% group_by(element,site) %>%
mutate(kg.cume = cumsum(kg.ha)) %>%
filter(element=='NO3.N') %>%
ggplot(.,aes(x=daily,y=kg.cume)) +
geom_line() +
facet_wrap(~site)
max.cast %>% filter(element=='NO3.N') %>%
filter(site=='RB') %>%
tail(.)
max.cast %>% group_by(element,site) %>%
mutate(kg.cume = cumsum(kg.ha)) %>%
filter(element=='NO3.N') %>%
ggplot(.,aes(x=daily,y=kg.cume,color=site)) +
facet_wrap(~site)
max.cast %>% group_by(element,site) %>%
mutate(kg.cume = cumsum(kg.ha)) %>%
filter(element=='NO3.N') %>%
ggplot(.,aes(x=daily,y=kg.cume,color=site)) + geom_point()
max.cast %>% filter(element=='NO3.N') %>%
max.cast %>% filter(element=='NO3.N') %>%
filter(site=='RB') %>%
tail(.)
max.cast %>% filter(element=='NO3.N') %>%
filter(site=='RB') %>%
tail(.)
head(max.cast)
max.cume <- max.cast %>% group_by(element,site) %>%
mutate(kg.cume = cumsum(kg.ha)) %>%
filter(element=='NO3.N')
max.cume %>% filter(element=='NO3.N') %>%
filter(site=='RB') %>%
tail(.)
max.cume <- max.cast %>% group_by(element,site) %>%
mutate(kg.cume = cumsum(kg.ha,na.rm=T)) %>%
filter(element=='NO3.N') %>%
ggplot(.,aes(x=daily,y=kg.cume,color=site)) + geom_point()
?cumsum
max.cume <- max.cast %>% group_by(element,site) %>%
mutate(kg.fill = ts(.$kg.ha) %>%
na.interpolation(.) %>%
as.numeric(.)) %>%
mutate(kg.cume = cumsum(kg.fill,na.rm=T))
filter(element=='NO3.N') %>%
ggplot(.,aes(x=daily,y=kg.cume,color=site)) + geom_point()
max.cume <- max.cast %>% group_by(element,site) %>%
mutate(kg.fill = ts(.$kg.ha) %>%
na.interpolation(.) %>%
as.numeric(.)) %>%
mutate(kg.cume = cumsum(kg.fill,na.rm=T))
filter(element=='NO3.N') %>%
max.cume <- max.cast %>% group_by(element,site) %>%
mutate(kg.fill = ts(.$kg.ha) %>%
na.interpolation(.) %>%
as.numeric(.)) %>%
mutate(kg.cume = cumsum(kg.fill,na.rm=T))
filter(element=='NO3.N')
max.cume <- max.cast %>% group_by(element,site) %>%
mutate(kg.fill = ts(.$kg.ha) %>%
na.interpolation(.) %>%
as.numeric(.))
max.cume <- max.cast %>% group_by(element,site) %>%
mutate(kg.fill = ts(kg.ha) %>%
na.interpolation(.) %>%
as.numeric(.))
max.cume <- max.cast %>% group_by(element,site) %>%
mutate(kg.fill = ts(kg.ha) %>%
na.interpolation(.) %>%
as.numeric(.)) %>%
mutate(kg.cume = cumsum(kg.fill,na.rm=T))
max.cume <- max.cast %>% group_by(element,site) %>%
mutate(kg.fill = ts(kg.ha) %>%
na.interpolation(.) %>%
as.numeric(.))
str(max.cume)
max.cume <- max.cast %>% group_by(element,site) %>%
mutate(kg.fill = ts(kg.ha) %>%
na.interpolation(.) %>%
as.numeric(.))  %>%
mutate(kg.cume = cumsum(kg.fill,na.rm=T))
max.cume <- max.cast %>% group_by(element,site) %>%
mutate(kg.fill = ts(kg.ha) %>%
na.interpolation(.) %>%
as.numeric(.))  %>%
mutate(kg.cume = cumsum(kg.fill)) %>%
filter(element=='NO3.N')
ggplot(max.cume,aes(x=daily,y=kg.cume,color=site)) + geom_point()
cumifiter <- function(x){
cume <- x %>% group_by(element,site) %>%
mutate(kg.fill = ts(kg.ha) %>%
na.interpolation(.) %>%
as.numeric(.))  %>%
mutate(kg.cume = cumsum(kg.fill)) %>%
filter(element=='NO3.N')
return(cume)
}
cumifiter <- function(x){
cume <- x %>% group_by(element,site) %>%
mutate(kg.fill = ts(kg.ha) %>%
na.interpolation(.) %>%
as.numeric(.))  %>%
mutate(kg.cume = cumsum(kg.fill)) %>%
filter(element=='NO3.N')
return(cume)
}
cume.max <- cumifier(max.cast)
cumifier <- function(x){
cume <- x %>% group_by(element,site) %>%
mutate(kg.fill = ts(kg.ha) %>%
na.interpolation(.) %>%
as.numeric(.))  %>%
mutate(kg.cume = cumsum(kg.fill)) %>%
filter(element=='NO3.N')
return(cume)
}
cume.max <- cumifier(max.cast)
ggplot(max.cume,aes(x=daily,y=kg.cume,color=site)) + geom_point()
cume.min <- cumifier(min.cast)
cume.tot <- left_join(cume.max,cume.min,by='daily',suffix=c('.max','.min'))
cume.tot$kg.cume.mean <- (cume.tot$kg.cume.max +
cume.tot$kg.cume.min)/2
ggplot(cume.tot,aes(x=daily,ymin=kg.cume.min,ymax=kg.cume.max,color=site)) + geom_ribbon() + geom_line()
cume.tot <- left_join(cume.max,cume.min,by='daily',suffix=c('.max','.min'))
cume.tot$kg.cume.mean <- (cume.tot$kg.cume.max +
cume.tot$kg.cume.min)/2
ggplot(cume.tot,aes(x=daily,ymin=kg.cume.min,ymax=kg.cume.max,color=site.max)) + geom_ribbon() + geom_line()
ggplot(cume.tot,aes(x=daily,ymin=kg.cume.min,ymax=kg.cume.max,y=kg.cume.mean,color=site.max)) + geom_ribbon() + geom_line()
cume.tot <- left_join(cume.max,cume.min,by=c('daily','site','element'),suffix=c('.max','.min'))
cume.tot$kg.cume.mean <- (cume.tot$kg.cume.max +
cume.tot$kg.cume.min)/2
ggplot(cume.tot,aes(x=daily,ymin=kg.cume.min,ymax=kg.cume.max,y=kg.cume.mean,color=site)) + geom_ribbon() + geom_line()
cume.tot %>% filter(site %in% c('LB','RB')) %>%
ggplot(.,aes(x=daily,ymin=kg.cume.min,ymax=kg.cume.max,y=kg.cume.mean,color=site)) + geom_ribbon() + geom_line()
cume.tot %>% filter(site %in% c('LB','RB')) %>%
ggplot(.,aes(x=daily,ymin=kg.cume.min,ymax=kg.cume.max,y=kg.cume.mean,color=site)) + geom_ribbon() + geom_line() +
scale_y_log10()
cume.tot %>% filter(site %in% c('LB','RB')) %>%
ggplot(.,aes(x=daily,ymin=kg.cume.min,ymax=kg.cume.max,y=kg.cume.mean,color=site)) + geom_ribbon() + geom_line() +
scale_y_log10() + ylim(0.001,20)
cume.tot %>% filter(site %in% c('LB','RB')) %>%
ggplot(.,aes(x=daily,ymin=kg.cume.min,ymax=kg.cume.max,y=kg.cume.mean,color=site)) + geom_ribbon() + geom_line() +
scale_y_log10() + ylim(0.001,23)
cume.tot %>% filter(site %in% c('LB','RB')) %>%
ggplot(.,aes(x=daily,ymin=kg.cume.min,ymax=kg.cume.max,y=kg.cume.mean,color=site)) + geom_ribbon() + geom_line()
cume.tot %>% filter(site %in% c('LB','RB')) %>%
ggplot(.,aes(x=daily,ymin=kg.cume.min,ymax=kg.cume.max,y=kg.cume.mean,color=site)) + geom_ribbon(color=site) + geom_line()
cume.tot %>% filter(site %in% c('LB','RB')) %>%
ggplot(.,aes(x=daily,ymin=kg.cume.min,ymax=kg.cume.max,y=kg.cume.mean,color=site,fill=site)) + geom_ribbon() + geom_line()
ggplot(.,aes(x=daily,ymin=kg.cume.min,ymax=kg.cume.max,y=kg.cume.mean,color=site,fill=site)) + geom_ribbon(alpha=0.5) + geom_line()
cume.tot %>% filter(site %in% c('LB','RB')) %>%
ggplot(.,aes(x=daily,ymin=kg.cume.min,ymax=kg.cume.max,y=kg.cume.mean,color=site,fill=site)) + geom_ribbon(alpha=0.5) + geom_line()
cume.tot %>% filter(site %in% c('LB','RB')) %>%
ggplot(.,aes(x=daily,ymin=kg.cume.min,ymax=kg.cume.max,y=kg.cume.mean,color=site,fill=site)) + geom_ribbon(alpha=0.3) + geom_line()
cume.tot %>% filter(site %in% c('LB','RB')) %>%
ggplot(.,aes(x=daily,ymin=kg.cume.min,ymax=kg.cume.max,color=site,fill=site)) + geom_ribbon(alpha=0.3) + geom_line(aes(y=kg.cume.mean))
cume.tot %>% filter(site %in% c('LB','RB')) %>%
ggplot(.,aes(x=daily,color=site,fill=site)) +
geom_ribbon(aes(ymin=kg.cume.min,ymax=kg.cume.max),alpha=0.3) + geom_line(aes(y=kg.cume.mean))
cume.tot %>% filter(site %in% c('LB','RB')) %>%
ggplot(.,aes(x=daily)) +
geom_ribbon(aes(ymin=kg.cume.min,ymax=kg.cume.max,fill=site),alpha=0.3) + geom_line(aes(y=kg.cume.mean,color=site))
no3.col <- c('#2166ac','#b2182b')
cume.tot %>% filter(site %in% c('LB','RB')) %>%
ggplot(.,aes(x=daily)) +
geom_ribbon(aes(ymin=kg.cume.min,ymax=kg.cume.max,fill=site),alpha=0.3) + geom_line(aes(y=kg.cume.mean,color=site)) + scale_color_manual(values=no3.col) + scale_fill_manual(values=no3.col)
getwd()
save(cume.tot,file='cume.no3.RData')
library(tidyverse)
load('cume.no3.RData')
cume.tot %>% filter(site %in% c('LB','RB')) %>%
ggplot(.,aes(x=daily)) +
geom_ribbon(aes(ymin=kg.cume.min,ymax=kg.cume.max,fill=site),alpha=0.3) + geom_line(aes(y=kg.cume.mean,color=site)) + scale_color_manual(values=no3.col) + scale_fill_manual(values=no3.col)
library(tidyverse)
load('cume.no3.RData')
no3.col <- c('#2166ac','#b2182b')
cume.tot %>% filter(site %in% c('LB','RB')) %>%
ggplot(.,aes(x=daily)) +
geom_ribbon(aes(ymin=kg.cume.min,ymax=kg.cume.max,fill=site),alpha=0.3) + geom_line(aes(y=kg.cume.mean,color=site)) + scale_color_manual(values=no3.col) + scale_fill_manual(values=no3.col)
